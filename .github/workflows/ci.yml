name: Advanced CI/CD Pipeline
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.10']  # Test trên nhiều phiên bản Python
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Check code quality
        run: |
          flake8 src/ tests/
          pylint src/ tests/
          black --check src/ tests/
      - name: Run tests
        run: pytest --cov=src --cov-report=xml

      - name: Start Flask app
        run: |
          export FLASK_APP=src/app.py
          flask run --host=0.0.0.0 --port=5000 &
          sleep 5  # Đợi server khởi động
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      - name: Security check
        run: |
          pip install bandit
          bandit -r src/

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image (staging)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/product-api:staging .
          docker push ${{ secrets.DOCKER_USERNAME }}/product-api:staging

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image (production)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/product-api:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/product-api:latest
